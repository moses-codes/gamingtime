import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import Layout from "~/components/layout/Layout";

import { useState } from "react"

import { api } from "~/utils/api";
import { type } from "os";

export default function Home() {

    const [boardGames, setBoardGames] = useState([])

    const { data: userGames } = api.boardGames.getUserGames.useQuery(undefined, {
        onSuccess: (data) => {
            setBoardGames(data)
        },
    });


    console.log('the users games are: ', { boardGames })

    return (
        <>
            <Layout>
                <Head>
                    <title>MeepleMatch: Shelf</title>
                    <meta name="description" content="Generated by create-t3-app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <main className=" flex min-h-screen flex-col items-center justify-center bg-slate-300">
                    <h1>Library</h1>
                    <div>
                        <ul>
                            {boardGames && boardGames.map(game => {
                                return <li>
                                    {game.title}
                                </li>
                            })}
                        </ul>
                    </div>
                </main>
            </Layout>
        </>
    );
}

function AuthShowcase() {
    const { data: sessionData } = useSession();
    //use the useSession function from nextAuth
    const { data: secretMessage } = api.example.getSecretMessage.useQuery(
        undefined, // no input
        { enabled: sessionData?.user !== undefined }
    );

    return (
        <div className="flex flex-col items-center justify-center gap-4">
            <p className="text-center text-2xl text-white">
                {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
                {secretMessage && <span> - {secretMessage}</span>}
            </p>
            <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={sessionData ? () => void signOut() : () => void signIn()}
            >
                {sessionData ? "Sign out" : "Sign in"}
            </button>
        </div>
    );
}
